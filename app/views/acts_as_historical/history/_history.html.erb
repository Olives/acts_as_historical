<tr>
  <td><%= time_ago_in_words history.created_at %> ago</td>
  <td>
    <% if @by == "model" %>
      <%= history.display_label(:editor) %>
    <% else %>
      <%= history.display_label(:model) %>
    <% end %>
  </td>
  <td>
    <dl>
      <% if history.before.empty? %>
        <dt><strong><%= t "acts_as_historical.created" %></strong> </dt>
      <% elsif history.after.empty? %>
        <dt><strong><%= t "acts_as_historical.deleted" %></strong> </dt>
      <% end %>
      <% if history.item_type != history.historical_type %>
        <dt><%= history.display_label(:dependent) %></dt>
      <% end %>

      <% options = history.item_type.constantize.history_options %>
      <% fields = (history.after.empty? ? history.before : history.after) %>
      <% History.remove_unwanted_fields(options,  fields.dup).each do |field, value| %>
        <% unless field == :id || (history.before[field] == value && history.after.any?) ||
               options[:except].include?(field)  %>

          <dt class="indent"><%= t "#{history.item_type.downcase}.#{field}" %> </dt>
          <dd>
            <% display_method = (options[:display] && options[:display][field]) || field %>
            <% if history.before.key? field %>
              <div><%= t "acts_as_historical.old_value", :value => history.before_model.send(display_method) %></div>
            <% end %>
            <% if history.after.key? field %>
              <div>
                <%= t "acts_as_historical.new_value", :value => history.after_model.send(display_method) %>
              </div>
            <% end %>
          </dd>
        <% end %>
    <% end %>
    </dl>
  </td>
</tr>
